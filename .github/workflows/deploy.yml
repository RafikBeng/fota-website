 
name: Publish Site

on:
  pull_request:
    branches: 
     - master
  push:
    branches:
     - master
  
  workflow_dispatch:

jobs:
  checks:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    steps:
     - name: Checkout project for test build
       run: |
        git config --global user.email "actions@gihub.com"
        git clone https://github.com/asdasdsadasdas/fota-website.git
     - uses: actions/setup-node@v1
       with:
         node-version: '12.x'
     - name: Test if build succeeds
       run: |
         cd /home/runner/work/fota-website/fota-website/
         if [ -e yarn.lock ]; then
         yarn install --frozen-lockfile
         elif [ -e package-lock.json ]; then
         npm ci
         else
         npm i
         fi
         npm run build
  run-release:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: checkout website for deployment
        run: |
         git config --global user.email "actions@gihub.com"
         git clone https://github.com/asdasdsadasdas/fota-website.git
         pwd
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Add key to allow access to repository
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          echo "${{ secrets.GH_PAGES_DEPLOY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat <<EOT >> ~/.ssh/config
          Host github.com
          HostName github.com
          IdentityFile ~/.ssh/id_rsa
          EOT
      - name: Release to GitHub Pages
        env:
          USE_SSH: true
          GIT_USER: git
        run: |
          pwd
          ls
          cd /home/runner/work/fota-website/fota-website/
          pwd
          git config --global user.email "actions@gihub.com"
          git config --global user.name "gh-actions"
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi
          npm run build
          git clone https://github.com/asdasdsadasdas/asdasdsadasdas.github.io.git
          cd asdasdsadasdas.github.io
          rm -rf *
          git commit -a -m "delete all"
          cp -r ../dist/fota-website/* .
          git commit -a -m "do deploy"
          git push
